{
  "name": "help",
  "version": "3.0.2",
  "description": "substack way of --help",
  "main": "index.js",
  "scripts": {
    "test": "tap test/test.js --cov"
  },
  "dependencies": {},
  "devDependencies": {
    "tap": "~2.2.0"
  },
  "license": "MIT",
  "author": {
    "name": "Evan Lucas",
    "email": "evanlucas@me.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/evanlucas/help"
  },
  "homepage": "https://github.com/evanlucas/help",
  "bugs": {
    "url": "https://github.com/evanlucas/help/issues"
  },
  "readme": "# help\n\n[![Build Status](https://travis-ci.org/evanlucas/help.svg)](https://travis-ci.org/evanlucas/help)\n[![Coverage Status](https://coveralls.io/repos/evanlucas/help/badge.svg?branch=master&service=github)](https://coveralls.io/github/evanlucas/help?branch=master)\n\n[substack](https://github.com/substack) way of --help\n\nv3 of `help` requires at least Node.js v4. To use `help` with an older version,\nplease use `help@2.x`.\n\n## Install\n\n```bash\n$ npm install help\n```\n\n## Usage\n\n```js\nvar help = require('help')('usage.txt')\n\nif (/* someone requested help */) {\n  return help(0)\n}\n```\n\n## API\n\n### help(filepath, stream)\n\nreturns function(code)\n\nPipes the contents of <filepath> to `process.stdout`.\n\n`code` is the exit code. If not falsy, then the process is explictly exited.\n\n`stream` defaults to `process.stdout`\n\n## Full example\n\n```js\nvar help = require('help')('usage.txt')\nvar args = process.argv.splice(2)\nif (args[0] === '-h' || args[0] === '--help' || args[0] === 'help') {\n  // process prints contents of `usage.txt` and returns\n  return help()\n}\n\n// the first arg must be a number\nif (isNaN(args[0])) {\n  // process prints contents of `usage.txt` and exits with code 1\n  return help(1)\n}\n```\n\n## Author\n\nEvan Lucas\n\n## License\n\nMIT (See `LICENSE` for more info)\n",
  "readmeFilename": "README.md",
  "_id": "help@3.0.2",
  "_from": "help@"
}
